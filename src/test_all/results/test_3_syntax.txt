PLY: PARSE DEBUG START

State  : 0
Stack  : . LexToken(NUMBER,'Number',1,0)
Action : Shift and goto state 19

State  : 19
Stack  : NUMBER . LexToken(ID,'number',1,7)
Action : Shift and goto state 53

State  : 53
Defaulted state 53: Reduce using 53
Stack  : NUMBER ID . None
Action : Reduce rule [variableDeclaration -> NUMBER ID] with ['Number','number'] and goto state 16
Result : <str @ 0x23479414570> ('number')

State  : 16
Stack  : variableDeclaration . LexToken(SET,'=',1,14)
Action : Shift and goto state 44

State  : 44
Stack  : variableDeclaration SET . LexToken(NUMBER_LITERAL,0,1,16)
Action : Shift and goto state 24

State  : 24
Stack  : variableDeclaration SET NUMBER_LITERAL . LexToken(SEMICOLON,';',1,17)
Action : Reduce rule [mutable -> NUMBER_LITERAL] with [0] and goto state 22
Result : <int @ 0x7ffad1bc1680> (0)

State  : 22
Stack  : variableDeclaration SET mutable . LexToken(SEMICOLON,';',1,17)
Action : Reduce rule [factor -> mutable] with [0] and goto state 18
Result : <int @ 0x7ffad1bc1680> (0)

State  : 18
Stack  : variableDeclaration SET factor . LexToken(SEMICOLON,';',1,17)
Action : Reduce rule [multiplyExpression -> factor] with [0] and goto state 60
Result : <int @ 0x7ffad1bc1680> (0)

State  : 60
Stack  : variableDeclaration SET multiplyExpression . LexToken(SEMICOLON,';',1,17)
Action : Reduce rule [sumExpression -> multiplyExpression] with [0] and goto state 66
Result : <int @ 0x7ffad1bc1680> (0)

State  : 66
Stack  : variableDeclaration SET sumExpression . LexToken(SEMICOLON,';',1,17)
Action : Reduce rule [assignmentExpression -> variableDeclaration SET sumExpression] with ['number','=',0] and goto state 8
Result : <tuple @ 0x234794169f0> (('assignmentExpression', '=', 'number',  ...)

State  : 8
Stack  : assignmentExpression . LexToken(SEMICOLON,';',1,17)
Action : Reduce rule [expression -> assignmentExpression] with [<tuple @ 0x234794169f0>] and goto state 5
Result : <tuple @ 0x234794169f0> (('assignmentExpression', '=', 'number',  ...)

State  : 5
Stack  : expression . LexToken(SEMICOLON,';',1,17)
Action : Shift and goto state 29

State  : 29
Stack  : expression SEMICOLON . LexToken(FOR,'for',1,19)
Action : Reduce rule [statement -> expression SEMICOLON] with [<tuple @ 0x234794169f0>,';'] and goto state 4
Result : <tuple @ 0x234794169f0> (('assignmentExpression', '=', 'number',  ...)

State  : 4
Stack  : statement . LexToken(FOR,'for',1,19)
Action : Shift and goto state 15

State  : 15
Stack  : statement FOR . LexToken(LPAREN,'(',1,22)
Action : Shift and goto state 43

State  : 43
Stack  : statement FOR LPAREN . LexToken(NUMBER,'Number',1,23)
Action : Shift and goto state 19

State  : 19
Stack  : statement FOR LPAREN NUMBER . LexToken(ID,'i',1,30)
Action : Shift and goto state 53

State  : 53
Defaulted state 53: Reduce using 53
Stack  : statement FOR LPAREN NUMBER ID . None
Action : Reduce rule [variableDeclaration -> NUMBER ID] with ['Number','i'] and goto state 16
Result : <str @ 0x234771446b0> ('i')

State  : 16
Stack  : statement FOR LPAREN variableDeclaration . LexToken(SET,'=',1,32)
Action : Shift and goto state 44

State  : 44
Stack  : statement FOR LPAREN variableDeclaration SET . LexToken(NUMBER_LITERAL,0,1,34)
Action : Shift and goto state 24

State  : 24
Stack  : statement FOR LPAREN variableDeclaration SET NUMBER_LITERAL . LexToken(SEMICOLON,';',1,35)
Action : Reduce rule [mutable -> NUMBER_LITERAL] with [0] and goto state 22
Result : <int @ 0x7ffad1bc1680> (0)

State  : 22
Stack  : statement FOR LPAREN variableDeclaration SET mutable . LexToken(SEMICOLON,';',1,35)
Action : Reduce rule [factor -> mutable] with [0] and goto state 18
Result : <int @ 0x7ffad1bc1680> (0)

State  : 18
Stack  : statement FOR LPAREN variableDeclaration SET factor . LexToken(SEMICOLON,';',1,35)
Action : Reduce rule [multiplyExpression -> factor] with [0] and goto state 60
Result : <int @ 0x7ffad1bc1680> (0)

State  : 60
Stack  : statement FOR LPAREN variableDeclaration SET multiplyExpression . LexToken(SEMICOLON,';',1,35)
Action : Reduce rule [sumExpression -> multiplyExpression] with [0] and goto state 66
Result : <int @ 0x7ffad1bc1680> (0)

State  : 66
Stack  : statement FOR LPAREN variableDeclaration SET sumExpression . LexToken(SEMICOLON,';',1,35)
Action : Reduce rule [assignmentExpression -> variableDeclaration SET sumExpression] with ['i','=',0] and goto state 8
Result : <tuple @ 0x23479416c20> (('assignmentExpression', '=', 'i', 0))

State  : 8
Stack  : statement FOR LPAREN assignmentExpression . LexToken(SEMICOLON,';',1,35)
Action : Reduce rule [expression -> assignmentExpression] with [<tuple @ 0x23479416c20>] and goto state 65
Result : <tuple @ 0x23479416c20> (('assignmentExpression', '=', 'i', 0))

State  : 65
Stack  : statement FOR LPAREN expression . LexToken(SEMICOLON,';',1,35)
Action : Shift and goto state 72

State  : 72
Stack  : statement FOR LPAREN expression SEMICOLON . LexToken(ID,'i',1,37)
Action : Shift and goto state 17

State  : 17
Stack  : statement FOR LPAREN expression SEMICOLON ID . LexToken(LESS,'<',1,39)
Action : Reduce rule [mutable -> ID] with ['i'] and goto state 22
Result : <str @ 0x234771446b0> ('i')

State  : 22
Stack  : statement FOR LPAREN expression SEMICOLON mutable . LexToken(LESS,'<',1,39)
Action : Reduce rule [factor -> mutable] with ['i'] and goto state 18
Result : <str @ 0x234771446b0> ('i')

State  : 18
Stack  : statement FOR LPAREN expression SEMICOLON factor . LexToken(LESS,'<',1,39)
Action : Reduce rule [multiplyExpression -> factor] with ['i'] and goto state 11
Result : <str @ 0x234771446b0> ('i')

State  : 11
Stack  : statement FOR LPAREN expression SEMICOLON multiplyExpression . LexToken(LESS,'<',1,39)
Action : Reduce rule [sumExpression -> multiplyExpression] with ['i'] and goto state 10
Result : <str @ 0x234771446b0> ('i')

State  : 10
Stack  : statement FOR LPAREN expression SEMICOLON sumExpression . LexToken(LESS,'<',1,39)
Action : Shift and goto state 39

State  : 39
Stack  : statement FOR LPAREN expression SEMICOLON sumExpression LESS . LexToken(NUMBER_LITERAL,10,1,41)
Action : Reduce rule [relationOperator -> LESS] with ['<'] and goto state 33
Result : <str @ 0x234775e5fb0> ('<')

State  : 33
Stack  : statement FOR LPAREN expression SEMICOLON sumExpression relationOperator . LexToken(NUMBER_LITERAL,10,1,41)
Action : Shift and goto state 24

State  : 24
Stack  : statement FOR LPAREN expression SEMICOLON sumExpression relationOperator NUMBER_LITERAL . LexToken(SEMICOLON,';',1,43)
Action : Reduce rule [mutable -> NUMBER_LITERAL] with [10] and goto state 22
Result : <int @ 0x7ffad1bc17c0> (10)

State  : 22
Stack  : statement FOR LPAREN expression SEMICOLON sumExpression relationOperator mutable . LexToken(SEMICOLON,';',1,43)
Action : Reduce rule [factor -> mutable] with [10] and goto state 18
Result : <int @ 0x7ffad1bc17c0> (10)

State  : 18
Stack  : statement FOR LPAREN expression SEMICOLON sumExpression relationOperator factor . LexToken(SEMICOLON,';',1,43)
Action : Reduce rule [multiplyExpression -> factor] with [10] and goto state 60
Result : <int @ 0x7ffad1bc17c0> (10)

State  : 60
Stack  : statement FOR LPAREN expression SEMICOLON sumExpression relationOperator multiplyExpression . LexToken(SEMICOLON,';',1,43)
Action : Reduce rule [sumExpression -> multiplyExpression] with [10] and goto state 58
Result : <int @ 0x7ffad1bc17c0> (10)

State  : 58
Stack  : statement FOR LPAREN expression SEMICOLON sumExpression relationOperator sumExpression . LexToken(SEMICOLON,';',1,43)
Action : Reduce rule [relationExpression -> sumExpression] with [10] and goto state 59
Result : <int @ 0x7ffad1bc17c0> (10)

State  : 59
Stack  : statement FOR LPAREN expression SEMICOLON sumExpression relationOperator relationExpression . LexToken(SEMICOLON,';',1,43)
Action : Reduce rule [relationExpression -> sumExpression relationOperator relationExpression] with ['i','<',10] and goto state 12
Result : <tuple @ 0x234794169a0> (('relationExpression', '<', 'i', 10))

State  : 12
Stack  : statement FOR LPAREN expression SEMICOLON relationExpression . LexToken(SEMICOLON,';',1,43)
Action : Reduce rule [expression -> relationExpression] with [<tuple @ 0x234794169a0>] and goto state 65
Result : <tuple @ 0x234794169a0> (('relationExpression', '<', 'i', 10))

State  : 65
Stack  : statement FOR LPAREN expression SEMICOLON expression . LexToken(SEMICOLON,';',1,43)
Action : Shift and goto state 72

State  : 72
Stack  : statement FOR LPAREN expression SEMICOLON expression SEMICOLON . LexToken(ID,'i',1,45)
Action : Shift and goto state 17

State  : 17
Stack  : statement FOR LPAREN expression SEMICOLON expression SEMICOLON ID . LexToken(INCREMENT,'++',1,46)
Action : Shift and goto state 47

State  : 47
Stack  : statement FOR LPAREN expression SEMICOLON expression SEMICOLON ID INCREMENT . LexToken(RPAREN,')',1,48)
Action : Reduce rule [iterationOperator -> INCREMENT] with ['++'] and goto state 46
Result : <str @ 0x234793df0b0> ('++')

State  : 46
Stack  : statement FOR LPAREN expression SEMICOLON expression SEMICOLON ID iterationOperator . LexToken(RPAREN,')',1,48)
Action : Reduce rule [iterationExpression -> ID iterationOperator] with ['i','++'] and goto state 9
Result : <tuple @ 0x2347942c720> (('assignmentExpression', '=', 'i', ('ite ...)

State  : 9
Stack  : statement FOR LPAREN expression SEMICOLON expression SEMICOLON iterationExpression . LexToken(RPAREN,')',1,48)
Action : Reduce rule [expression -> iterationExpression] with [<tuple @ 0x2347942c720>] and goto state 65
Result : <tuple @ 0x2347942c720> (('assignmentExpression', '=', 'i', ('ite ...)

State  : 65
Stack  : statement FOR LPAREN expression SEMICOLON expression SEMICOLON expression . LexToken(RPAREN,')',1,48)
Action : Reduce rule [forExpression -> expression] with [<tuple @ 0x2347942c720>] and goto state 77
Result : <tuple @ 0x2347942c720> (('assignmentExpression', '=', 'i', ('ite ...)

State  : 77
Defaulted state 77: Reduce using 10
Stack  : statement FOR LPAREN expression SEMICOLON expression SEMICOLON forExpression . LexToken(RPAREN,')',1,48)
Action : Reduce rule [forExpression -> expression SEMICOLON forExpression] with [<tuple @ 0x234794169a0>,';',<tuple @ 0x2347942c720>] and goto state 77
Result : <tuple @ 0x23479414540> (('forExpression', ('relationExpression', ...)

State  : 77
Defaulted state 77: Reduce using 10
Stack  : statement FOR LPAREN expression SEMICOLON forExpression . LexToken(RPAREN,')',1,48)
Action : Reduce rule [forExpression -> expression SEMICOLON forExpression] with [<tuple @ 0x23479416c20>,';',<tuple @ 0x23479414540>] and goto state 64
Result : <tuple @ 0x23479414480> (('forExpression', ('assignmentExpression ...)

State  : 64
Stack  : statement FOR LPAREN forExpression . LexToken(RPAREN,')',1,48)
Action : Shift and goto state 71

State  : 71
Stack  : statement FOR LPAREN forExpression RPAREN . LexToken(LCURLY,'{',1,50)
Action : Shift and goto state 74

State  : 74
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY . LexToken(ID,'number',1,56)
Action : Shift and goto state 17

State  : 17
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY ID . LexToken(SET,'=',1,63)
Action : Shift and goto state 45

State  : 45
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY ID SET . LexToken(ID,'number',1,65)
Action : Shift and goto state 57

State  : 57
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY ID SET ID . LexToken(PLUS,'+',1,72)
Action : Reduce rule [mutable -> ID] with ['number'] and goto state 22
Result : <str @ 0x2347942bf30> ('number')

State  : 22
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY ID SET mutable . LexToken(PLUS,'+',1,72)
Action : Reduce rule [factor -> mutable] with ['number'] and goto state 18
Result : <str @ 0x2347942bf30> ('number')

State  : 18
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY ID SET factor . LexToken(PLUS,'+',1,72)
Action : Reduce rule [multiplyExpression -> factor] with ['number'] and goto state 60
Result : <str @ 0x2347942bf30> ('number')

State  : 60
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY ID SET multiplyExpression . LexToken(PLUS,'+',1,72)
Action : Shift and goto state 31

State  : 31
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY ID SET multiplyExpression PLUS . LexToken(ID,'i',1,74)
Action : Reduce rule [sumOperator -> PLUS] with ['+'] and goto state 40
Result : <str @ 0x234775e5f30> ('+')

State  : 40
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY ID SET multiplyExpression sumOperator . LexToken(ID,'i',1,74)
Action : Shift and goto state 57

State  : 57
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY ID SET multiplyExpression sumOperator ID . LexToken(SEMICOLON,';',1,75)
Action : Reduce rule [mutable -> ID] with ['i'] and goto state 22
Result : <str @ 0x234771446b0> ('i')

State  : 22
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY ID SET multiplyExpression sumOperator mutable . LexToken(SEMICOLON,';',1,75)
Action : Reduce rule [factor -> mutable] with ['i'] and goto state 18
Result : <str @ 0x234771446b0> ('i')

State  : 18
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY ID SET multiplyExpression sumOperator factor . LexToken(SEMICOLON,';',1,75)
Action : Reduce rule [multiplyExpression -> factor] with ['i'] and goto state 60
Result : <str @ 0x234771446b0> ('i')

State  : 60
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY ID SET multiplyExpression sumOperator multiplyExpression . LexToken(SEMICOLON,';',1,75)
Action : Reduce rule [sumExpression -> multiplyExpression] with ['i'] and goto state 61
Result : <str @ 0x234771446b0> ('i')

State  : 61
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY ID SET multiplyExpression sumOperator sumExpression . LexToken(SEMICOLON,';',1,75)
Action : Reduce rule [sumExpression -> multiplyExpression sumOperator sumExpression] with ['number','+','i'] and goto state 67
Result : <tuple @ 0x23479416b30> (('sumExpression', '+', 'number', 'i'))

State  : 67
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY ID SET sumExpression . LexToken(SEMICOLON,';',1,75)
Action : Reduce rule [assignmentExpression -> ID SET sumExpression] with ['number','=',<tuple @ 0x23479416b30>] and goto state 8
Result : <tuple @ 0x23479416680> (('assignmentExpression', '=', 'number',  ...)

State  : 8
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY assignmentExpression . LexToken(SEMICOLON,';',1,75)
Action : Reduce rule [expression -> assignmentExpression] with [<tuple @ 0x23479416680>] and goto state 5
Result : <tuple @ 0x23479416680> (('assignmentExpression', '=', 'number',  ...)

State  : 5
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY expression . LexToken(SEMICOLON,';',1,75)
Action : Shift and goto state 29

State  : 29
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY expression SEMICOLON . LexToken(ID,'number',1,81)
Action : Reduce rule [statement -> expression SEMICOLON] with [<tuple @ 0x23479416680>,';'] and goto state 82
Result : <tuple @ 0x23479416680> (('assignmentExpression', '=', 'number',  ...)

State  : 82
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement . LexToken(ID,'number',1,81)
Action : Shift and goto state 17

State  : 17
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement ID . LexToken(SET,'=',1,88)
Action : Shift and goto state 45

State  : 45
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement ID SET . LexToken(NUMBER_LITERAL,3,1,90)
Action : Shift and goto state 24

State  : 24
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement ID SET NUMBER_LITERAL . LexToken(SEMICOLON,';',1,91)
Action : Reduce rule [mutable -> NUMBER_LITERAL] with [3] and goto state 22
Result : <int @ 0x7ffad1bc16e0> (3)

State  : 22
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement ID SET mutable . LexToken(SEMICOLON,';',1,91)
Action : Reduce rule [factor -> mutable] with [3] and goto state 18
Result : <int @ 0x7ffad1bc16e0> (3)

State  : 18
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement ID SET factor . LexToken(SEMICOLON,';',1,91)
Action : Reduce rule [multiplyExpression -> factor] with [3] and goto state 60
Result : <int @ 0x7ffad1bc16e0> (3)

State  : 60
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement ID SET multiplyExpression . LexToken(SEMICOLON,';',1,91)
Action : Reduce rule [sumExpression -> multiplyExpression] with [3] and goto state 67
Result : <int @ 0x7ffad1bc16e0> (3)

State  : 67
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement ID SET sumExpression . LexToken(SEMICOLON,';',1,91)
Action : Reduce rule [assignmentExpression -> ID SET sumExpression] with ['number','=',3] and goto state 8
Result : <tuple @ 0x2347941e630> (('assignmentExpression', '=', 'number',  ...)

State  : 8
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement assignmentExpression . LexToken(SEMICOLON,';',1,91)
Action : Reduce rule [expression -> assignmentExpression] with [<tuple @ 0x2347941e630>] and goto state 5
Result : <tuple @ 0x2347941e630> (('assignmentExpression', '=', 'number',  ...)

State  : 5
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement expression . LexToken(SEMICOLON,';',1,91)
Action : Shift and goto state 29

State  : 29
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement expression SEMICOLON . LexToken(ID,'number',1,97)
Action : Reduce rule [statement -> expression SEMICOLON] with [<tuple @ 0x2347941e630>,';'] and goto state 82
Result : <tuple @ 0x2347941e630> (('assignmentExpression', '=', 'number',  ...)

State  : 82
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement statement . LexToken(ID,'number',1,97)
Action : Shift and goto state 17

State  : 17
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement statement ID . LexToken(SET,'=',1,104)
Action : Shift and goto state 45

State  : 45
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement statement ID SET . LexToken(NUMBER_LITERAL,5,1,106)
Action : Shift and goto state 24

State  : 24
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement statement ID SET NUMBER_LITERAL . LexToken(SEMICOLON,';',1,107)
Action : Reduce rule [mutable -> NUMBER_LITERAL] with [5] and goto state 22
Result : <int @ 0x7ffad1bc1720> (5)

State  : 22
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement statement ID SET mutable . LexToken(SEMICOLON,';',1,107)
Action : Reduce rule [factor -> mutable] with [5] and goto state 18
Result : <int @ 0x7ffad1bc1720> (5)

State  : 18
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement statement ID SET factor . LexToken(SEMICOLON,';',1,107)
Action : Reduce rule [multiplyExpression -> factor] with [5] and goto state 60
Result : <int @ 0x7ffad1bc1720> (5)

State  : 60
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement statement ID SET multiplyExpression . LexToken(SEMICOLON,';',1,107)
Action : Reduce rule [sumExpression -> multiplyExpression] with [5] and goto state 67
Result : <int @ 0x7ffad1bc1720> (5)

State  : 67
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement statement ID SET sumExpression . LexToken(SEMICOLON,';',1,107)
Action : Reduce rule [assignmentExpression -> ID SET sumExpression] with ['number','=',5] and goto state 8
Result : <tuple @ 0x2347941e1d0> (('assignmentExpression', '=', 'number',  ...)

State  : 8
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement statement assignmentExpression . LexToken(SEMICOLON,';',1,107)
Action : Reduce rule [expression -> assignmentExpression] with [<tuple @ 0x2347941e1d0>] and goto state 5
Result : <tuple @ 0x2347941e1d0> (('assignmentExpression', '=', 'number',  ...)

State  : 5
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement statement expression . LexToken(SEMICOLON,';',1,107)
Action : Shift and goto state 29

State  : 29
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement statement expression SEMICOLON . LexToken(RCURLY,'}',1,109)
Action : Reduce rule [statement -> expression SEMICOLON] with [<tuple @ 0x2347941e1d0>,';'] and goto state 82
Result : <tuple @ 0x2347941e1d0> (('assignmentExpression', '=', 'number',  ...)

State  : 82
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement statement statement . LexToken(RCURLY,'}',1,109)
Action : Reduce rule [statementBodyExpression -> statement] with [<tuple @ 0x2347941e1d0>] and goto state 86
Result : <tuple @ 0x2347941e1d0> (('assignmentExpression', '=', 'number',  ...)

State  : 86
Defaulted state 86: Reduce using 14
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement statement statementBodyExpression . LexToken(RCURLY,'}',1,109)
Action : Reduce rule [statementBodyExpression -> statement statementBodyExpression] with [<tuple @ 0x2347941e630>,<tuple @ 0x2347941e1d0>] and goto state 86
Result : <tuple @ 0x23479414500> (('statementBodyExpression', ('assignment ...)

State  : 86
Defaulted state 86: Reduce using 14
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statement statementBodyExpression . LexToken(RCURLY,'}',1,109)
Action : Reduce rule [statementBodyExpression -> statement statementBodyExpression] with [<tuple @ 0x23479416680>,<tuple @ 0x23479414500>] and goto state 81
Result : <tuple @ 0x2347941b340> (('statementBodyExpression', ('assignment ...)

State  : 81
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statementBodyExpression . LexToken(RCURLY,'}',1,109)
Action : Shift and goto state 85

State  : 85
Stack  : statement FOR LPAREN forExpression RPAREN LCURLY statementBodyExpression RCURLY . $end
Action : Reduce rule [statementBody -> LCURLY statementBodyExpression RCURLY] with ['{',<tuple @ 0x2347941b340>,'}'] and goto state 76
Result : <tuple @ 0x2347941b340> (('statementBodyExpression', ('assignment ...)

State  : 76
Stack  : statement FOR LPAREN forExpression RPAREN statementBody . $end
Action : Reduce rule [iterationStatement -> FOR LPAREN forExpression RPAREN statementBody] with ['for','(',<tuple @ 0x23479414480>,')',<tuple @ 0x2347941b340>] and goto state 7
Result : <tuple @ 0x2347941b580> (('forStatement', ('forExpression', ('ass ...)

State  : 7
Stack  : statement iterationStatement . $end
Action : Reduce rule [statement -> iterationStatement] with [<tuple @ 0x2347941b580>] and goto state 4
Result : <tuple @ 0x2347941b580> (('forStatement', ('forExpression', ('ass ...)

State  : 4
Stack  : statement statement . $end
Action : Reduce rule [nextLinePrime -> <empty>] with [] and goto state 28
Result : <NoneType @ 0x7ffad1b89880> (None)

State  : 28
Defaulted state 28: Reduce using 3
Stack  : statement statement nextLinePrime . $end
Action : Reduce rule [nextLinePrime -> statement nextLinePrime] with [<tuple @ 0x2347941b580>,None] and goto state 28
Result : <tuple @ 0x2347941b580> (('forStatement', ('forExpression', ('ass ...)

State  : 28
Defaulted state 28: Reduce using 3
Stack  : statement nextLinePrime . $end
Action : Reduce rule [nextLinePrime -> statement nextLinePrime] with [<tuple @ 0x234794169f0>,<tuple @ 0x2347941b580>] and goto state 3
Result : <tuple @ 0x2347941bd40> (('statement', ('assignmentExpression', ' ...)

State  : 3
Defaulted state 3: Reduce using 2
Stack  : nextLinePrime . $end
Action : Reduce rule [nextLine -> nextLinePrime] with [<tuple @ 0x2347941bd40>] and goto state 2
Result : <tuple @ 0x2347941bd40> (('statement', ('assignmentExpression', ' ...)

State  : 2
Defaulted state 2: Reduce using 1
Stack  : nextLine . $end
Action : Reduce rule [program -> nextLine] with [<tuple @ 0x2347941bd40>] and goto state 1
Result : <tuple @ 0x2347941bd40> (('statement', ('assignmentExpression', ' ...)

State  : 1
Stack  : program . $end
Done   : Returning <tuple @ 0x2347941bd40> (('statement', ('assignmentExpression', ' ...)
PLY: PARSE DEBUG END
